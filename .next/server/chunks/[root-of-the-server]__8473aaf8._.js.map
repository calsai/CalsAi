{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alexx/OneDrive/Desktop/cals/src/lib/supabase-server.ts"],"sourcesContent":["import { createServerClient } from \"@supabase/ssr\";\r\nimport { cookies } from \"next/headers\";\r\n\r\n// Client pentru server components - folosit doar pe server\r\nexport const createSupabaseServerClient = async () => {\r\n  const cookieStore = await cookies();\r\n\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        getAll() {\r\n          return cookieStore.getAll();\r\n        },\r\n        setAll(cookiesToSet) {\r\n          try {\r\n            cookiesToSet.forEach(({ name, value, options }) => {\r\n              cookieStore.set(name, value, options);\r\n            });\r\n          } catch {\r\n            // Ignores the error when cookies cannot be set during SSR\r\n          }\r\n        },\r\n      },\r\n    }\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAGO,MAAM,6BAA6B;IACxC,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;wBAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;oBAC/B;gBACF,EAAE,OAAM;gBACN,0DAA0D;gBAC5D;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alexx/OneDrive/Desktop/cals/src/app/api/check-schema/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { createSupabaseServerClient } from \"@/lib/supabase-server\";\r\n\r\nexport async function GET() {\r\n  try {\r\n    const supabase = await createSupabaseServerClient();\r\n\r\n    // Test 1: VerificƒÉ tabelul profiles\r\n    const { error: profilesError } = await supabase\r\n      .from(\"profiles\")\r\n      .select(\"count\")\r\n      .limit(1);\r\n\r\n    // Test 2: VerificƒÉ tabelul food_entries\r\n    const { error: foodError } = await supabase\r\n      .from(\"food_entries\")\r\n      .select(\"count\")\r\n      .limit(1);\r\n\r\n    // Test 3: VerificƒÉ tabelul chat_messages\r\n    const { error: chatError } = await supabase\r\n      .from(\"chat_messages\")\r\n      .select(\"count\")\r\n      .limit(1);\r\n\r\n    // Test 4: VerificƒÉ tabelul recipes\r\n    const { error: recipesError } = await supabase\r\n      .from(\"recipes\")\r\n      .select(\"count\")\r\n      .limit(1);\r\n\r\n    const results = {\r\n      profiles: profilesError ? `‚ùå ${profilesError.message}` : \"‚úÖ ExistƒÉ\",\r\n      food_entries: foodError ? `‚ùå ${foodError.message}` : \"‚úÖ ExistƒÉ\",\r\n      chat_messages: chatError ? `‚ùå ${chatError.message}` : \"‚úÖ ExistƒÉ\",\r\n      recipes: recipesError ? `‚ùå ${recipesError.message}` : \"‚úÖ ExistƒÉ\",\r\n    };\r\n\r\n    const allTablesExist =\r\n      !profilesError && !foodError && !chatError && !recipesError;\r\n\r\n    return NextResponse.json({\r\n      success: allTablesExist,\r\n      message: allTablesExist\r\n        ? \"üéâ Toate tabelele existƒÉ! Schema a fost aplicatƒÉ cu succes!\"\r\n        : \"‚ùå Unele tabele lipsesc. Trebuie sƒÉ aplici schema SQL √Æn Supabase.\",\r\n      tables: results,\r\n      instruction: allTablesExist\r\n        ? \"Po»õi sƒÉ √Æncerci sƒÉ te √Ænregistrezi acum!\"\r\n        : \"Mergi pe supabase.com ‚Üí SQL Editor ‚Üí ruleazƒÉ supabase-schema.sql\",\r\n    });\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : \"Unknown error\",\r\n        message: \"Eroare la verificarea tabelelor\",\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,kIAAA,CAAA,6BAA0B,AAAD;QAEhD,oCAAoC;QACpC,MAAM,EAAE,OAAO,aAAa,EAAE,GAAG,MAAM,SACpC,IAAI,CAAC,YACL,MAAM,CAAC,SACP,KAAK,CAAC;QAET,wCAAwC;QACxC,MAAM,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,SAChC,IAAI,CAAC,gBACL,MAAM,CAAC,SACP,KAAK,CAAC;QAET,yCAAyC;QACzC,MAAM,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,SAChC,IAAI,CAAC,iBACL,MAAM,CAAC,SACP,KAAK,CAAC;QAET,mCAAmC;QACnC,MAAM,EAAE,OAAO,YAAY,EAAE,GAAG,MAAM,SACnC,IAAI,CAAC,WACL,MAAM,CAAC,SACP,KAAK,CAAC;QAET,MAAM,UAAU;YACd,UAAU,gBAAgB,CAAC,EAAE,EAAE,cAAc,OAAO,EAAE,GAAG;YACzD,cAAc,YAAY,CAAC,EAAE,EAAE,UAAU,OAAO,EAAE,GAAG;YACrD,eAAe,YAAY,CAAC,EAAE,EAAE,UAAU,OAAO,EAAE,GAAG;YACtD,SAAS,eAAe,CAAC,EAAE,EAAE,aAAa,OAAO,EAAE,GAAG;QACxD;QAEA,MAAM,iBACJ,CAAC,iBAAiB,CAAC,aAAa,CAAC,aAAa,CAAC;QAEjD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS,iBACL,gEACA;YACJ,QAAQ;YACR,aAAa,iBACT,6CACA;QACN;IACF,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAChD,SAAS;QACX,GACA;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}