{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alexx/OneDrive/Desktop/cals/src/components/AuthModal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useAuth } from \"@/contexts/AuthContext\";\r\n\r\ninterface AuthModalProps {\r\n  show: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nexport default function AuthModal({ show, onClose }: AuthModalProps) {\r\n  const { signIn, signUp } = useAuth();\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  if (!show) return null;\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    try {\r\n      let result;\r\n      if (isLogin) {\r\n        result = await signIn(email, password);\r\n      } else {\r\n        result = await signUp(email, password, fullName);\r\n      }\r\n\r\n      if (result.error) {\r\n        // Verifică dacă e mesaj de confirmare email\r\n        if (\r\n          result.error.includes(\"verifică\") ||\r\n          result.error.includes(\"confirmare\")\r\n        ) {\r\n          setSuccess(result.error);\r\n          // Resetează form-ul pentru sign up pentru că a fost de succes\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n          setFullName(\"\");\r\n        } else {\r\n          setError(result.error);\r\n        }\r\n        return;\r\n      }\r\n\r\n      // Succes - închide modalul\r\n      onClose();\r\n    } catch (error) {\r\n      setError(error instanceof Error ? error.message : \"A apărut o eroare\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full p-6\">\r\n        <div className=\"text-center mb-6\">\r\n          <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">\r\n            {isLogin ? \"Conectează-te\" : \"Creează un cont\"}\r\n          </h2>\r\n          <p className=\"text-gray-600\">\r\n            {isLogin\r\n              ? \"Intră în contul tău pentru a continua\"\r\n              : \"Începe călătoria ta către o alimentație sănătoasă\"}\r\n          </p>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          {!isLogin && (\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Numele complet\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={fullName}\r\n                onChange={(e) => setFullName(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"Alex Popescu\"\r\n                required={!isLogin}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"alex@example.com\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Parola\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"••••••••\"\r\n              required\r\n              minLength={6}\r\n            />\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"bg-red-50 border border-red-200 rounded-md p-3\">\r\n              <p className=\"text-sm text-red-600\">{error}</p>\r\n            </div>\r\n          )}\r\n\r\n          {success && (\r\n            <div className=\"bg-green-50 border border-green-200 rounded-md p-4\">\r\n              <div className=\"flex\">\r\n                <div className=\"flex-shrink-0\">\r\n                  <svg\r\n                    className=\"h-5 w-5 text-green-400\"\r\n                    viewBox=\"0 0 20 20\"\r\n                    fill=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\r\n                      clipRule=\"evenodd\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"ml-3\">\r\n                  <p className=\"text-sm font-medium text-green-800\">\r\n                    Cont creat cu succes!\r\n                  </p>\r\n                  <p className=\"text-sm text-green-700 mt-1\">{success}</p>\r\n                  <p className=\"text-sm text-green-700 mt-2\">\r\n                    Deschide linkul din email, apoi revino și loghează-te.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {loading ? (\r\n              <div className=\"flex items-center justify-center\">\r\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                Se procesează...\r\n              </div>\r\n            ) : isLogin ? (\r\n              \"Conectează-te\"\r\n            ) : (\r\n              \"Creează contul\"\r\n            )}\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"mt-6 text-center\">\r\n          {success ? (\r\n            <div className=\"space-y-2\">\r\n              <p className=\"text-sm text-gray-600\">\r\n                Vezi email-ul pentru confirmarea contului\r\n              </p>\r\n              <button\r\n                onClick={() => {\r\n                  setIsLogin(true);\r\n                  setSuccess(\"\");\r\n                  setError(\"\");\r\n                  setEmail(\"\");\r\n                  setPassword(\"\");\r\n                  setFullName(\"\");\r\n                }}\r\n                className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\r\n              >\r\n                Am confirmat email-ul - Vreau să mă logheze\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <button\r\n              onClick={() => {\r\n                setIsLogin(!isLogin);\r\n                setError(\"\");\r\n                setSuccess(\"\");\r\n                setEmail(\"\");\r\n                setPassword(\"\");\r\n                setFullName(\"\");\r\n              }}\r\n              className=\"text-blue-600 hover:text-blue-800 text-sm\"\r\n            >\r\n              {isLogin ? (\r\n                <>\r\n                  Nu ai un cont?{\" \"}\r\n                  <span className=\"font-medium\">Înregistrează-te aici</span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  Ai deja un cont?{\" \"}\r\n                  <span className=\"font-medium\">Conectează-te</span>\r\n                </>\r\n              )}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAUe,SAAS,UAAU,KAAiC;QAAjC,EAAE,IAAI,EAAE,OAAO,EAAkB,GAAjC;;IAChC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,IAAI,CAAC,MAAM,OAAO;IAElB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,WAAW;QACX,SAAS;QACT,WAAW;QAEX,IAAI;YACF,IAAI;YACJ,IAAI,SAAS;gBACX,SAAS,MAAM,OAAO,OAAO;YAC/B,OAAO;gBACL,SAAS,MAAM,OAAO,OAAO,UAAU;YACzC;YAEA,IAAI,OAAO,KAAK,EAAE;gBAChB,4CAA4C;gBAC5C,IACE,OAAO,KAAK,CAAC,QAAQ,CAAC,eACtB,OAAO,KAAK,CAAC,QAAQ,CAAC,eACtB;oBACA,WAAW,OAAO,KAAK;oBACvB,8DAA8D;oBAC9D,SAAS;oBACT,YAAY;oBACZ,YAAY;gBACd,OAAO;oBACL,SAAS,OAAO,KAAK;gBACvB;gBACA;YACF;YAEA,2BAA2B;YAC3B;QACF,EAAE,OAAO,OAAO;YACd,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QACpD,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCACX,UAAU,kBAAkB;;;;;;sCAE/B,6LAAC;4BAAE,WAAU;sCACV,UACG,0CACA;;;;;;;;;;;;8BAIR,6LAAC;oBAAK,UAAU;oBAAc,WAAU;;wBACrC,CAAC,yBACA,6LAAC;;8CACC,6LAAC;oCAAM,WAAU;8CAA+C;;;;;;8CAGhE,6LAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oCAC3C,WAAU;oCACV,aAAY;oCACZ,UAAU,CAAC;;;;;;;;;;;;sCAKjB,6LAAC;;8CACC,6LAAC;oCAAM,WAAU;8CAA+C;;;;;;8CAGhE,6LAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oCACxC,WAAU;oCACV,aAAY;oCACZ,QAAQ;;;;;;;;;;;;sCAIZ,6LAAC;;8CACC,6LAAC;oCAAM,WAAU;8CAA+C;;;;;;8CAGhE,6LAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oCAC3C,WAAU;oCACV,aAAY;oCACZ,QAAQ;oCACR,WAAW;;;;;;;;;;;;wBAId,uBACC,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;wBAIxC,yBACC,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CACC,WAAU;4CACV,SAAQ;4CACR,MAAK;sDAEL,cAAA,6LAAC;gDACC,UAAS;gDACT,GAAE;gDACF,UAAS;;;;;;;;;;;;;;;;kDAIf,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAE,WAAU;0DAAqC;;;;;;0DAGlD,6LAAC;gDAAE,WAAU;0DAA+B;;;;;;0DAC5C,6LAAC;gDAAE,WAAU;0DAA8B;;;;;;;;;;;;;;;;;;;;;;;sCAQnD,6LAAC;4BACC,MAAK;4BACL,UAAU;4BACV,WAAU;sCAET,wBACC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;;;;;oCAAuE;;;;;;uCAGtF,UACF,kBAEA;;;;;;;;;;;;8BAKN,6LAAC;oBAAI,WAAU;8BACZ,wBACC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAE,WAAU;0CAAwB;;;;;;0CAGrC,6LAAC;gCACC,SAAS;oCACP,WAAW;oCACX,WAAW;oCACX,SAAS;oCACT,SAAS;oCACT,YAAY;oCACZ,YAAY;gCACd;gCACA,WAAU;0CACX;;;;;;;;;;;6CAKH,6LAAC;wBACC,SAAS;4BACP,WAAW,CAAC;4BACZ,SAAS;4BACT,WAAW;4BACX,SAAS;4BACT,YAAY;4BACZ,YAAY;wBACd;wBACA,WAAU;kCAET,wBACC;;gCAAE;gCACe;8CACf,6LAAC;oCAAK,WAAU;8CAAc;;;;;;;yDAGhC;;gCAAE;gCACiB;8CACjB,6LAAC;oCAAK,WAAU;8CAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAShD;GAtNwB;;QACK,kIAAA,CAAA,UAAO;;;KADZ","debugId":null}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alexx/OneDrive/Desktop/cals/src/components/ProfileSetup.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\ninterface UserProfile {\r\n  full_name?: string;\r\n  age?: number;\r\n  weight?: number;\r\n  height?: number;\r\n  gender?: \"male\" | \"female\";\r\n  activity_level?:\r\n    | \"sedentary\"\r\n    | \"light\"\r\n    | \"moderate\"\r\n    | \"active\"\r\n    | \"very_active\";\r\n  goal?: \"lose\" | \"maintain\" | \"gain\";\r\n  daily_calorie_goal?: number;\r\n}\r\n\r\ninterface ProfileSetupProps {\r\n  userProfile?: UserProfile;\r\n  onProfileUpdate: (profile: UserProfile) => void;\r\n  onClose?: () => void;\r\n  embedded?: boolean;\r\n}\r\n\r\nexport default function ProfileSetup({\r\n  userProfile,\r\n  onProfileUpdate,\r\n  onClose,\r\n  embedded = false,\r\n}: ProfileSetupProps) {\r\n  const [formData, setFormData] = useState({\r\n    full_name: \"\",\r\n    age: \"\",\r\n    weight: \"\",\r\n    height: \"\",\r\n    gender: \"male\" as \"male\" | \"female\",\r\n    activity_level: \"moderate\" as\r\n      | \"sedentary\"\r\n      | \"light\"\r\n      | \"moderate\"\r\n      | \"active\"\r\n      | \"very_active\",\r\n    goal: \"maintain\" as \"lose\" | \"maintain\" | \"gain\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (userProfile) {\r\n      setFormData({\r\n        full_name: userProfile.full_name || \"\",\r\n        age: userProfile.age?.toString() || \"\",\r\n        weight: userProfile.weight?.toString() || \"\",\r\n        height: userProfile.height?.toString() || \"\",\r\n        gender: userProfile.gender || \"male\",\r\n        activity_level: userProfile.activity_level || \"moderate\",\r\n        goal: userProfile.goal || \"maintain\",\r\n      });\r\n    }\r\n  }, [userProfile]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"/api/profile\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          age: parseInt(formData.age),\r\n          weight: parseFloat(formData.weight),\r\n          height: parseInt(formData.height),\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        onProfileUpdate(data.profile);\r\n        if (onClose) onClose();\r\n      } else {\r\n        setError(data.error || \"A apărut o eroare\");\r\n      }\r\n    } catch {\r\n      setError(\"A apărut o eroare la salvarea profilului\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const activityLevels = [\r\n    {\r\n      value: \"sedentary\",\r\n      label: \"Sedentar\",\r\n      description: \"Puțină sau deloc activitate fizică\",\r\n    },\r\n    {\r\n      value: \"light\",\r\n      label: \"Ușor activ\",\r\n      description: \"Exerciții ușoare 1-3 zile/săptămână\",\r\n    },\r\n    {\r\n      value: \"moderate\",\r\n      label: \"Moderat activ\",\r\n      description: \"Exerciții moderate 3-5 zile/săptămână\",\r\n    },\r\n    {\r\n      value: \"active\",\r\n      label: \"Activ\",\r\n      description: \"Exerciții intense 6-7 zile/săptămână\",\r\n    },\r\n    {\r\n      value: \"very_active\",\r\n      label: \"Foarte activ\",\r\n      description: \"Exerciții foarte intense, 2x pe zi\",\r\n    },\r\n  ];\r\n\r\n  const goals = [\r\n    {\r\n      value: \"lose\",\r\n      label: \"Pierdere în greutate\",\r\n      description: \"Vreau să slăbesc\",\r\n    },\r\n    {\r\n      value: \"maintain\",\r\n      label: \"Menținere\",\r\n      description: \"Vreau să îmi mențin greutatea\",\r\n    },\r\n    {\r\n      value: \"gain\",\r\n      label: \"Creștere în greutate\",\r\n      description: \"Vreau să mă îngraș/să câștig masă musculară\",\r\n    },\r\n  ];\r\n\r\n  const content = (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"text-center\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">\r\n          {userProfile\r\n            ? \"Actualizează-ți profilul\"\r\n            : \"Să te cunoaștem mai bine\"}\r\n        </h2>\r\n        <p className=\"text-gray-600\">\r\n          Aceste informații ne ajută să îți calculăm necesarul caloric și să îți\r\n          oferim recomandări personalizate\r\n        </p>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Numele complet\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.full_name}\r\n            onChange={(e) =>\r\n              setFormData({ ...formData, full_name: e.target.value })\r\n            }\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            placeholder=\"Alex Popescu\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Vârsta (ani)\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              value={formData.age}\r\n              onChange={(e) =>\r\n                setFormData({ ...formData, age: e.target.value })\r\n              }\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"25\"\r\n              min=\"13\"\r\n              max=\"100\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Greutatea (kg)\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              step=\"0.1\"\r\n              value={formData.weight}\r\n              onChange={(e) =>\r\n                setFormData({ ...formData, weight: e.target.value })\r\n              }\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"70\"\r\n              min=\"30\"\r\n              max=\"300\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Înălțimea (cm)\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              value={formData.height}\r\n              onChange={(e) =>\r\n                setFormData({ ...formData, height: e.target.value })\r\n              }\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"175\"\r\n              min=\"120\"\r\n              max=\"250\"\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-3\">\r\n            Sexul\r\n          </label>\r\n          <div className=\"flex space-x-4\">\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"radio\"\r\n                value=\"male\"\r\n                checked={formData.gender === \"male\"}\r\n                onChange={(e) =>\r\n                  setFormData({\r\n                    ...formData,\r\n                    gender: e.target.value as \"male\" | \"female\",\r\n                  })\r\n                }\r\n                className=\"mr-2\"\r\n              />\r\n              <span>Masculin</span>\r\n            </label>\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"radio\"\r\n                value=\"female\"\r\n                checked={formData.gender === \"female\"}\r\n                onChange={(e) =>\r\n                  setFormData({\r\n                    ...formData,\r\n                    gender: e.target.value as \"male\" | \"female\",\r\n                  })\r\n                }\r\n                className=\"mr-2\"\r\n              />\r\n              <span>Feminin</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-3\">\r\n            Nivelul de activitate\r\n          </label>\r\n          <div className=\"space-y-2\">\r\n            {activityLevels.map((level) => (\r\n              <label key={level.value} className=\"flex items-start\">\r\n                <input\r\n                  type=\"radio\"\r\n                  value={level.value}\r\n                  checked={formData.activity_level === level.value}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      activity_level: e.target\r\n                        .value as typeof formData.activity_level,\r\n                    })\r\n                  }\r\n                  className=\"mr-2 mt-1\"\r\n                />\r\n                <div>\r\n                  <div className=\"font-medium\">{level.label}</div>\r\n                  <div className=\"text-sm text-gray-600\">\r\n                    {level.description}\r\n                  </div>\r\n                </div>\r\n              </label>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-3\">\r\n            Obiectivul tău\r\n          </label>\r\n          <div className=\"space-y-2\">\r\n            {goals.map((goal) => (\r\n              <label key={goal.value} className=\"flex items-start\">\r\n                <input\r\n                  type=\"radio\"\r\n                  value={goal.value}\r\n                  checked={formData.goal === goal.value}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      goal: e.target.value as typeof formData.goal,\r\n                    })\r\n                  }\r\n                  className=\"mr-2 mt-1\"\r\n                />\r\n                <div>\r\n                  <div className=\"font-medium\">{goal.label}</div>\r\n                  <div className=\"text-sm text-gray-600\">\r\n                    {goal.description}\r\n                  </div>\r\n                </div>\r\n              </label>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"bg-red-50 border border-red-200 rounded-md p-3\">\r\n            <p className=\"text-sm text-red-600\">{error}</p>\r\n          </div>\r\n        )}\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={loading}\r\n          className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n        >\r\n          {loading ? (\r\n            <div className=\"flex items-center justify-center\">\r\n              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n              Se salvează...\r\n            </div>\r\n          ) : userProfile ? (\r\n            \"Actualizează profilul\"\r\n          ) : (\r\n            \"Salvează profilul\"\r\n          )}\r\n        </button>\r\n\r\n        {onClose && !embedded && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={onClose}\r\n            className=\"w-full bg-gray-200 text-gray-800 py-2 px-4 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500\"\r\n          >\r\n            Anulează\r\n          </button>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  if (embedded) {\r\n    return <div className=\"max-w-2xl mx-auto\">{content}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto p-6\">\r\n        {content}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1027, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alexx/OneDrive/Desktop/cals/src/components/NaturalChat.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useRef, useEffect } from \"react\";\r\n\r\ninterface UserProfile {\r\n  full_name?: string;\r\n  age?: number;\r\n  weight?: number;\r\n  height?: number;\r\n  gender?: \"male\" | \"female\";\r\n  activity_level?:\r\n    | \"sedentary\"\r\n    | \"light\"\r\n    | \"moderate\"\r\n    | \"active\"\r\n    | \"very_active\";\r\n  goal?: \"lose\" | \"maintain\" | \"gain\";\r\n  daily_calorie_goal?: number;\r\n}\r\n\r\ninterface PendingEntry {\r\n  food_name: string;\r\n  calories: number;\r\n  protein: number;\r\n  carbs: number;\r\n  fat: number;\r\n  meal_time: \"dimineata\" | \"amiaza\" | \"seara\";\r\n  date: string;\r\n}\r\n\r\ninterface Message {\r\n  id: string;\r\n  role: \"user\" | \"assistant\";\r\n  content: string;\r\n  timestamp: Date;\r\n}\r\n\r\ninterface ChatSession {\r\n  id: string;\r\n  title: string;\r\n  lastMessage: string;\r\n  timestamp: Date;\r\n  messages: Message[];\r\n}\r\n\r\ninterface NaturalChatProps {\r\n  userProfile?: UserProfile;\r\n  onPendingEntries: (entries: PendingEntry[]) => void;\r\n}\r\n\r\nexport default function NaturalChat({\r\n  userProfile,\r\n  onPendingEntries,\r\n}: NaturalChatProps) {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [inputMessage, setInputMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [chatSessions, setChatSessions] = useState<ChatSession[]>([]);\r\n  const [currentSessionId, setCurrentSessionId] = useState<string | null>(null);\r\n  const [showHistory, setShowHistory] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  // Încărcare sesiuni din localStorage și încărcarea ultimei sesiuni active\r\n  useEffect(() => {\r\n    const savedSessions = localStorage.getItem(\"chatSessions\");\r\n    const lastActiveSessionId = localStorage.getItem(\"lastActiveSessionId\");\r\n\r\n    if (savedSessions) {\r\n      const sessions = JSON.parse(savedSessions);\r\n      // Convertim timestamp-urile din string înapoi în Date\r\n      const sessionsWithDates = sessions.map((session: ChatSession) => ({\r\n        ...session,\r\n        timestamp: new Date(session.timestamp),\r\n        messages: session.messages.map((msg: Message) => ({\r\n          ...msg,\r\n          timestamp: new Date(msg.timestamp),\r\n        })),\r\n      }));\r\n      setChatSessions(sessionsWithDates);\r\n\r\n      // Încarcă ultima sesiune activă dacă există\r\n      if (lastActiveSessionId && sessionsWithDates.length > 0) {\r\n        const lastSession = sessionsWithDates.find(\r\n          (s: ChatSession) => s.id === lastActiveSessionId\r\n        );\r\n        if (lastSession) {\r\n          setCurrentSessionId(lastSession.id);\r\n          setMessages(lastSession.messages);\r\n          return; // Nu afișa mesajul de bun venit dacă încărcăm o sesiune\r\n        }\r\n      }\r\n    }\r\n\r\n    // Creează o sesiune nouă DOAR dacă nu există niciuna salvată\r\n    if (!savedSessions || JSON.parse(savedSessions).length === 0) {\r\n      const newSessionId = Date.now().toString();\r\n      setCurrentSessionId(newSessionId);\r\n      localStorage.setItem(\"lastActiveSessionId\", newSessionId);\r\n    }\r\n  }, []);\r\n\r\n  // Salvare sesiuni în localStorage\r\n  const saveSessions = (sessions: ChatSession[]) => {\r\n    localStorage.setItem(\"chatSessions\", JSON.stringify(sessions));\r\n    setChatSessions(sessions);\r\n  };\r\n\r\n  // Crearea unei noi sesiuni\r\n  const createNewSession = () => {\r\n    const newSessionId = Date.now().toString();\r\n    setCurrentSessionId(newSessionId);\r\n    setMessages([]);\r\n    setShowHistory(false);\r\n    // Salvează ca sesiune activă\r\n    localStorage.setItem(\"lastActiveSessionId\", newSessionId);\r\n  };\r\n\r\n  // Salvarea sesiunii curente\r\n  const saveCurrentSession = (updatedMessages: Message[]) => {\r\n    if (!currentSessionId || updatedMessages.length === 0) return;\r\n\r\n    const firstUserMessage = updatedMessages.find((m) => m.role === \"user\");\r\n    const title = firstUserMessage\r\n      ? firstUserMessage.content.substring(0, 50) +\r\n        (firstUserMessage.content.length > 50 ? \"...\" : \"\")\r\n      : \"Conversație nouă\";\r\n\r\n    const lastMessage = updatedMessages[updatedMessages.length - 1];\r\n\r\n    const newSession: ChatSession = {\r\n      id: currentSessionId,\r\n      title,\r\n      lastMessage:\r\n        lastMessage.content.substring(0, 100) +\r\n        (lastMessage.content.length > 100 ? \"...\" : \"\"),\r\n      timestamp: new Date(),\r\n      messages: updatedMessages,\r\n    };\r\n\r\n    const existingIndex = chatSessions.findIndex(\r\n      (s) => s.id === currentSessionId\r\n    );\r\n    let updatedSessions;\r\n\r\n    if (existingIndex >= 0) {\r\n      updatedSessions = [...chatSessions];\r\n      updatedSessions[existingIndex] = newSession;\r\n    } else {\r\n      updatedSessions = [newSession, ...chatSessions];\r\n    }\r\n\r\n    saveSessions(updatedSessions);\r\n\r\n    // Salvează sesiunea activă\r\n    localStorage.setItem(\"lastActiveSessionId\", currentSessionId);\r\n  };\r\n\r\n  // Încărcarea unei sesiuni existente\r\n  const loadSession = (session: ChatSession) => {\r\n    setCurrentSessionId(session.id);\r\n    setMessages(session.messages);\r\n    setShowHistory(false);\r\n    // Salvează ca sesiune activă\r\n    localStorage.setItem(\"lastActiveSessionId\", session.id);\r\n  };\r\n\r\n  // Ștergerea unei sesiuni\r\n  const deleteSession = (sessionId: string) => {\r\n    const updatedSessions = chatSessions.filter((s) => s.id !== sessionId);\r\n    saveSessions(updatedSessions);\r\n\r\n    if (currentSessionId === sessionId) {\r\n      createNewSession();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // Mesaj de bun venit la încărcare - doar pentru sesiuni noi\r\n  useEffect(() => {\r\n    if (currentSessionId && messages.length === 0) {\r\n      const savedSessions = localStorage.getItem(\"chatSessions\");\r\n      const isFirstTimeUser = !savedSessions || JSON.parse(savedSessions).length === 0;\r\n      \r\n      if (isFirstTimeUser) {\r\n      const firstName = userProfile?.full_name?.split(\" \")[0] || \"client\";\r\n      const welcomeMessage: Message = {\r\n        id: \"welcome\",\r\n        role: \"assistant\",\r\n        content: `Salut ${firstName}! �\r\n\r\nSunt Alex, antrenorul tău personal și nutriționist. Sunt aici să-ți creez planuri personalizate de:\r\n\r\n�️ **ANTRENAMENT** - programe complete, exerciții, progresie\r\n🍽️ **NUTRIȚIE** - planuri de mese, macros, timing\r\n📊 **TRACKING** - progres, măsurători, obiective\r\n🧠 **MINDSET** - motivație, obiceiuri, discipline\r\n\r\n${\r\n  userProfile?.daily_calorie_goal\r\n    ? `🎯 Target zilnic: ${userProfile.daily_calorie_goal} calorii`\r\n    : \"📋 Hai să-ți calculez primul plan personalizat!\"\r\n}\r\n\r\nSpune-mi: care este situația ta actuală și ce vrei să îmbunătățești? Vreau să știu totul - nivel de fitness, experiență, timp disponibil, preferințe alimentare. Cu cât îmi spui mai multe, cu atât pot să te ajut mai eficient!`,\r\n        timestamp: new Date(),\r\n      };\r\n\r\n      setMessages([welcomeMessage]);\r\n      }\r\n    }\r\n  }, [userProfile, currentSessionId, messages.length]);\r\n\r\n  const sendMessage = async () => {\r\n    if (!inputMessage.trim() || loading) return;\r\n\r\n    // Creăm o sesiune nouă dacă nu există una\r\n    const sessionId = currentSessionId || Date.now().toString();\r\n    if (!currentSessionId) {\r\n      setCurrentSessionId(sessionId);\r\n    }\r\n\r\n    const userMessage: Message = {\r\n      id: Date.now().toString(),\r\n      role: \"user\",\r\n      content: inputMessage.trim(),\r\n      timestamp: new Date(),\r\n    };\r\n\r\n    const updatedMessages = [...messages, userMessage];\r\n    setMessages(updatedMessages);\r\n    setInputMessage(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"/api/natural-chat\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          message: inputMessage.trim(),\r\n          user_profile: userProfile,\r\n          conversation_history: messages.slice(-4).map((m) => ({\r\n            role: m.role,\r\n            content: m.content,\r\n          })),\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        const assistantMessage: Message = {\r\n          id: (Date.now() + 1).toString(),\r\n          role: \"assistant\",\r\n          content: data.response,\r\n          timestamp: new Date(),\r\n        };\r\n\r\n        const finalMessages = [...updatedMessages, assistantMessage];\r\n        setMessages(finalMessages);\r\n\r\n        // Salvăm sesiunea cu toate mesajele\r\n        saveCurrentSession(finalMessages);\r\n\r\n        // Dacă AI-ul a detectat mâncare și a generat intrări\r\n        if (data.pending_entries && data.pending_entries.length > 0) {\r\n          onPendingEntries(data.pending_entries);\r\n        }\r\n      } else {\r\n        const errorMessage: Message = {\r\n          id: (Date.now() + 1).toString(),\r\n          role: \"assistant\",\r\n          content:\r\n            \"Îmi pare rău, am întâmpinat o problemă tehnică. Te rog să încerci din nou.\",\r\n          timestamp: new Date(),\r\n        };\r\n        const finalMessages = [...updatedMessages, errorMessage];\r\n        setMessages(finalMessages);\r\n        saveCurrentSession(finalMessages);\r\n      }\r\n    } catch {\r\n      const errorMessage: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        role: \"assistant\",\r\n        content:\r\n          \"Îmi pare rău, nu am putut procesa mesajul. Verifică conexiunea și încearcă din nou.\",\r\n        timestamp: new Date(),\r\n      };\r\n      const finalMessages = [...updatedMessages, errorMessage];\r\n      setMessages(finalMessages);\r\n      saveCurrentSession(finalMessages);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === \"Enter\" && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const formatTime = (date: Date) => {\r\n    return date.toLocaleTimeString(\"ro-RO\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  };\r\n\r\n  // Funcție pentru formatarea textului cu markdown simplu\r\n  const formatMessage = (content: string) => {\r\n    return (\r\n      content\r\n        // Bold text **text** → <strong>text</strong>\r\n        .replace(/\\*\\*(.*?)\\*\\*/g, '<strong class=\"font-semibold\">$1</strong>')\r\n        // Emojis pentru titluri (păstrează spațierea)\r\n        .replace(\r\n          /^(💪|🏋️|📊|🍽️|🎯|⚠️|✅|❌|📋|💡|🔍|❓)\\s*\\*\\*(.*?)\\*\\*/gm,\r\n          '<div class=\"mt-4 mb-2\"><span class=\"text-lg\">$1</span> <strong class=\"text-lg font-semibold text-blue-700\">$2</strong></div>'\r\n        )\r\n        // Bullet points • text → <li>text</li>\r\n        .replace(/^•\\s*(.*$)/gm, '<li class=\"ml-4 list-disc\">$1</li>')\r\n        // Linii noi duble pentru paragrafe\r\n        .replace(/\\n\\n/g, '</p><p class=\"mt-3\">')\r\n        // Linii simple\r\n        .replace(/\\n/g, \"<br/>\")\r\n        // Wrap în paragraf\r\n        .replace(/^(.)/g, \"<p>$1\")\r\n        .replace(/(.)$/g, \"$1</p>\")\r\n        // Fix pentru liste\r\n        .replace(/<p><li/g, \"<ul><li\")\r\n        .replace(/li><\\/p>/g, \"li></ul>\")\r\n    );\r\n  };\r\n\r\n  const exampleMessages = [\r\n    \"Am mâncat două ouă fierte și ovăz cu fructe la micul dejun\",\r\n    \"Vreau un plan de antrenament pentru slăbire\",\r\n    \"Nu știu ce să mănânc să-mi ating obiectivul zilnic\",\r\n    \"Cum calculez macronutrienții pentru masa musculară?\",\r\n    \"Poți să-mi faci un plan de masă pentru săptămâna asta?\",\r\n    \"Ce exerciții sunt cele mai eficiente pentru abdomen?\",\r\n  ];\r\n\r\n  return (\r\n    <div className=\"h-[calc(100vh-180px)] bg-gray-50 rounded-3xl shadow-lg overflow-hidden flex flex-col\">\r\n      {/* Header simplu și elegant */}\r\n      <div className=\"bg-white border-b border-gray-100 p-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-green-500 rounded-full flex items-center justify-center\">\r\n              <span className=\"text-white text-lg font-semibold\">A</span>\r\n            </div>\r\n            <div>\r\n              <h3 className=\"text-xl font-semibold text-gray-800\">Alex</h3>\r\n              <p className=\"text-sm text-gray-500\">\r\n                Antrenor personal & nutriționist\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center space-x-3\">\r\n            <button\r\n              onClick={() => setShowHistory(!showHistory)}\r\n              className=\"flex items-center space-x-2 px-3 py-2 bg-gray-100 hover:bg-gray-200 rounded-xl transition-colors duration-200\"\r\n            >\r\n              <svg\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"currentColor\"\r\n                className=\"text-gray-600\"\r\n              >\r\n                <path d=\"M13,3A9,9 0 0,0 4,12H1L4.89,15.89L4.96,16.03L9,12H6A7,7 0 0,1 13,5A7,7 0 0,1 20,12A7,7 0 0,1 13,19C11.07,19 9.32,18.21 8.06,16.94L6.64,18.36C8.27,20 10.5,21 13,21A9,9 0 0,0 22,12A9,9 0 0,0 13,3Z\" />\r\n              </svg>\r\n              <span className=\"text-sm text-gray-600\">Istoric</span>\r\n            </button>\r\n            <button\r\n              onClick={createNewSession}\r\n              className=\"flex items-center space-x-2 px-3 py-2 bg-blue-100 hover:bg-blue-200 rounded-xl transition-colors duration-200\"\r\n            >\r\n              <svg\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"currentColor\"\r\n                className=\"text-blue-600\"\r\n              >\r\n                <path d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\r\n              </svg>\r\n              <span className=\"text-sm text-blue-600\">Chat nou</span>\r\n            </button>\r\n            <div className=\"flex items-center space-x-2 text-sm text-green-600\">\r\n              <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\r\n              <span>Online</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Container pentru mesaje */}\r\n      <div className=\"flex-1 overflow-y-auto p-6 space-y-4\">\r\n        {showHistory ? (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n              <h4 className=\"text-lg font-semibold text-gray-800\">\r\n                Conversații anterioare\r\n              </h4>\r\n              <button\r\n                onClick={() => setShowHistory(false)}\r\n                className=\"text-gray-500 hover:text-gray-700\"\r\n              >\r\n                <svg\r\n                  width=\"20\"\r\n                  height=\"20\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"currentColor\"\r\n                >\r\n                  <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n\r\n            {chatSessions.length === 0 ? (\r\n              <div className=\"text-center py-12\">\r\n                <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                  <svg\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"currentColor\"\r\n                    className=\"text-gray-400\"\r\n                  >\r\n                    <path d=\"M20,2A2,2 0 0,1 22,4V16A2,2 0 0,1 20,18H6L2,22V4C2,2.89 2.9,2 4,2H20M4,4V18L6,16H20V4H4Z\" />\r\n                  </svg>\r\n                </div>\r\n                <p className=\"text-gray-500\">Nu ai conversații salvate încă</p>\r\n                <p className=\"text-sm text-gray-400 mt-2\">\r\n                  Începe să vorbești cu Alex pentru a salva conversațiile\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"grid grid-cols-1 gap-3\">\r\n                {chatSessions.map((session) => (\r\n                  <div\r\n                    key={session.id}\r\n                    className=\"bg-white rounded-2xl border border-gray-200 p-4 hover:border-blue-300 hover:shadow-md transition-all duration-200 group cursor-pointer\"\r\n                    onClick={() => loadSession(session)}\r\n                  >\r\n                    <div className=\"flex items-start justify-between\">\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <h5 className=\"font-medium text-gray-800 truncate group-hover:text-blue-600 transition-colors\">\r\n                          {session.title}\r\n                        </h5>\r\n                        <p className=\"text-sm text-gray-500 mt-1 line-clamp-2\">\r\n                          {session.lastMessage}\r\n                        </p>\r\n                        <div className=\"flex items-center space-x-3 mt-3\">\r\n                          <span className=\"text-xs text-gray-400\">\r\n                            {session.timestamp.toLocaleDateString(\"ro-RO\")}{\" \"}\r\n                            {session.timestamp.toLocaleTimeString(\"ro-RO\", {\r\n                              hour: \"2-digit\",\r\n                              minute: \"2-digit\",\r\n                            })}\r\n                          </span>\r\n                          <span className=\"text-xs text-gray-400\">\r\n                            {session.messages.length} mesaje\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          deleteSession(session.id);\r\n                        }}\r\n                        className=\"ml-3 p-1 text-gray-400 hover:text-red-500 transition-colors opacity-0 group-hover:opacity-100\"\r\n                      >\r\n                        <svg\r\n                          width=\"16\"\r\n                          height=\"16\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          fill=\"currentColor\"\r\n                        >\r\n                          <path d=\"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\" />\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {messages.length === 0 ? (\r\n              <div className=\"text-center py-12\">\r\n                <div className=\"w-16 h-16 bg-gradient-to-r from-blue-500 to-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                  <span className=\"text-white text-2xl\">💬</span>\r\n                </div>\r\n                <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">\r\n                  Să începem antrenamentul! 💪\r\n                </h3>\r\n                <p className=\"text-gray-600 mb-8 max-w-md mx-auto\">\r\n                  Spune-mi despre obiectivele tale sau întreabă-mă orice despre\r\n                  fitness și nutriție\r\n                </p>\r\n\r\n                {/* Carduri cu sugestii */}\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 max-w-2xl mx-auto\">\r\n                  {exampleMessages.slice(0, 6).map((example, index) => (\r\n                    <button\r\n                      key={index}\r\n                      onClick={() => setInputMessage(example)}\r\n                      className=\"p-4 bg-white rounded-2xl border border-gray-200 hover:border-blue-300 hover:shadow-md transition-all duration-200 text-left group\"\r\n                    >\r\n                      <div className=\"flex items-start space-x-3\">\r\n                        <div className=\"w-8 h-8 bg-blue-50 rounded-lg flex items-center justify-center group-hover:bg-blue-100 transition-colors\">\r\n                          <span className=\"text-blue-500 text-sm\">\r\n                            {index === 0\r\n                              ? \"🍳\"\r\n                              : index === 1\r\n                              ? \"❓\"\r\n                              : index === 2\r\n                              ? \"🥗\"\r\n                              : index === 3\r\n                              ? \"🥤\"\r\n                              : index === 4\r\n                              ? \"🥩\"\r\n                              : \"🍎\"}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"flex-1\">\r\n                          <p className=\"text-sm text-gray-700 font-medium leading-relaxed\">\r\n                            {example}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              messages.map((message) => (\r\n                <div\r\n                  key={message.id}\r\n                  className={`flex items-end space-x-3 ${\r\n                    message.role === \"user\" ? \"justify-end\" : \"justify-start\"\r\n                  }`}\r\n                >\r\n                  {message.role === \"assistant\" && (\r\n                    <div className=\"w-8 h-8 bg-gradient-to-r from-blue-500 to-green-500 rounded-full flex items-center justify-center flex-shrink-0\">\r\n                      <span className=\"text-white text-sm font-semibold\">\r\n                        A\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div\r\n                    className={`max-w-xs lg:max-w-md px-4 py-3 rounded-2xl ${\r\n                      message.role === \"user\"\r\n                        ? \"bg-blue-500 text-white rounded-br-sm\"\r\n                        : \"bg-white text-gray-800 shadow-sm border border-gray-100 rounded-bl-sm\"\r\n                    }`}\r\n                  >\r\n                    {message.role === \"assistant\" ? (\r\n                      <div\r\n                        className=\"text-sm leading-relaxed\"\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: formatMessage(message.content),\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <p className=\"text-sm leading-relaxed whitespace-pre-wrap\">\r\n                        {message.content}\r\n                      </p>\r\n                    )}\r\n                    <p\r\n                      className={`text-xs mt-2 ${\r\n                        message.role === \"user\"\r\n                          ? \"text-blue-100\"\r\n                          : \"text-gray-500\"\r\n                      }`}\r\n                    >\r\n                      {formatTime(message.timestamp)}\r\n                    </p>\r\n                  </div>\r\n\r\n                  {message.role === \"user\" && (\r\n                    <div className=\"w-8 h-8 bg-gray-400 rounded-full flex items-center justify-center flex-shrink-0\">\r\n                      <span className=\"text-white text-sm font-semibold\">\r\n                        Tu\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))\r\n            )}\r\n\r\n            {loading && (\r\n              <div className=\"flex items-end space-x-3 justify-start\">\r\n                <div className=\"w-8 h-8 bg-gradient-to-r from-blue-500 to-green-500 rounded-full flex items-center justify-center flex-shrink-0\">\r\n                  <span className=\"text-white text-sm font-semibold\">A</span>\r\n                </div>\r\n                <div className=\"bg-white rounded-2xl rounded-bl-sm px-4 py-3 shadow-sm border border-gray-100\">\r\n                  <div className=\"flex space-x-1\">\r\n                    <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\r\n                    <div\r\n                      className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"\r\n                      style={{ animationDelay: \"0.1s\" }}\r\n                    ></div>\r\n                    <div\r\n                      className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"\r\n                      style={{ animationDelay: \"0.2s\" }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div ref={messagesEndRef} />\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* Input area modernă */}\r\n      <div className=\"border-t border-gray-100 bg-white p-4\">\r\n        <div className=\"flex items-end space-x-3\">\r\n          <div className=\"flex-1\">\r\n            <textarea\r\n              value={inputMessage}\r\n              onChange={(e) => setInputMessage(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Spune-mi despre antrenament, nutriție sau obiectivele tale...\"\r\n              disabled={loading}\r\n              className=\"w-full resize-none rounded-2xl border border-gray-200 px-4 py-3 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 max-h-32\"\r\n              rows={1}\r\n              style={{\r\n                minHeight: \"48px\",\r\n                height: \"auto\",\r\n              }}\r\n              onInput={(e) => {\r\n                const target = e.target as HTMLTextAreaElement;\r\n                target.style.height = \"48px\";\r\n                target.style.height = `${Math.min(target.scrollHeight, 128)}px`;\r\n              }}\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={sendMessage}\r\n            disabled={!inputMessage.trim() || loading}\r\n            className=\"w-12 h-12 bg-gradient-to-r from-blue-500 to-green-500 text-white rounded-full flex items-center justify-center hover:from-blue-600 hover:to-green-600 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-sm hover:shadow-md\"\r\n          >\r\n            {loading ? (\r\n              <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n            ) : (\r\n              <svg\r\n                width=\"20\"\r\n                height=\"20\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"currentColor\"\r\n              >\r\n                <path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\" />\r\n              </svg>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2032, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alexx/OneDrive/Desktop/cals/src/components/FoodJournal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\ninterface UserProfile {\r\n  full_name?: string;\r\n  age?: number;\r\n  weight?: number;\r\n  height?: number;\r\n  gender?: \"male\" | \"female\";\r\n  activity_level?:\r\n    | \"sedentary\"\r\n    | \"light\"\r\n    | \"moderate\"\r\n    | \"active\"\r\n    | \"very_active\";\r\n  goal?: \"lose\" | \"maintain\" | \"gain\";\r\n  daily_calorie_goal?: number;\r\n}\r\n\r\ninterface FoodEntry {\r\n  id: string;\r\n  food_name: string;\r\n  calories: number;\r\n  protein: number;\r\n  carbs: number;\r\n  fat: number;\r\n  meal_time: \"dimineata\" | \"amiaza\" | \"seara\";\r\n  date: string;\r\n  created_at: string;\r\n}\r\n\r\ninterface FoodJournalProps {\r\n  userProfile?: UserProfile;\r\n}\r\n\r\nexport default function FoodJournal({ userProfile }: FoodJournalProps) {\r\n  const [entries, setEntries] = useState<FoodEntry[]>([]);\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n  const [loading, setLoading] = useState(true);\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [addingFood, setAddingFood] = useState({\r\n    food_name: \"\",\r\n    meal_time: \"dimineata\" as \"dimineata\" | \"amiaza\" | \"seara\",\r\n    useAI: true,\r\n    calories: 0,\r\n    protein: 0,\r\n    carbs: 0,\r\n    fat: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadEntries = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(`/api/food-journal?date=${selectedDate}`);\r\n        const data = await response.json();\r\n\r\n        if (data.success) {\r\n          setEntries(data.entries || []);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading entries:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadEntries();\r\n  }, [selectedDate]);\r\n\r\n  const deleteEntry = async (entryId: string) => {\r\n    if (!confirm(\"Ești sigur că vrei să ștergi această intrare?\")) return;\r\n\r\n    try {\r\n      const response = await fetch(`/api/food-journal`, {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ entryId }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setEntries(entries.filter((entry) => entry.id !== entryId));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting entry:\", error);\r\n    }\r\n  };\r\n\r\n  const analyzeWithAI = async (foodDescription: string) => {\r\n    try {\r\n      const response = await fetch(\"/api/estimate-nutrition\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          foodDescription,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success && data.nutrition) {\r\n        return data.nutrition;\r\n      } else {\r\n        return estimateNutrition(foodDescription);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error analyzing with AI:\", error);\r\n      return estimateNutrition(foodDescription);\r\n    }\r\n  };\r\n\r\n  const estimateNutrition = (foodDescription: string) => {\r\n    // Estimări simple bazate pe cuvinte cheie\r\n    const desc = foodDescription.toLowerCase();\r\n    let calories = 100;\r\n    let protein = 5;\r\n    let carbs = 15;\r\n    let fat = 3;\r\n\r\n    // Pattern matching simplu pentru estimări\r\n    if (desc.includes(\"ou\")) {\r\n      calories = 70;\r\n      protein = 6;\r\n      carbs = 1;\r\n      fat = 5;\r\n    } else if (desc.includes(\"pui\") || desc.includes(\"piept\")) {\r\n      calories = 165;\r\n      protein = 31;\r\n      carbs = 0;\r\n      fat = 3.6;\r\n    } else if (desc.includes(\"pâine\") || desc.includes(\"felie\")) {\r\n      calories = 80;\r\n      protein = 3;\r\n      carbs = 15;\r\n      fat = 1;\r\n    } else if (desc.includes(\"lapte\")) {\r\n      calories = 64;\r\n      protein = 3.2;\r\n      carbs = 4.8;\r\n      fat = 3.6;\r\n    }\r\n\r\n    return { calories, protein, carbs, fat };\r\n  };\r\n\r\n  const addFoodEntry = async () => {\r\n    try {\r\n      let nutritionData = {\r\n        calories: addingFood.calories,\r\n        protein: addingFood.protein,\r\n        carbs: addingFood.carbs,\r\n        fat: addingFood.fat,\r\n      };\r\n\r\n      if (addingFood.useAI && addingFood.food_name.trim()) {\r\n        nutritionData = await analyzeWithAI(addingFood.food_name);\r\n      }\r\n\r\n      const newEntry = {\r\n        food_name: addingFood.food_name,\r\n        calories: nutritionData.calories,\r\n        protein: nutritionData.protein,\r\n        carbs: nutritionData.carbs,\r\n        fat: nutritionData.fat,\r\n        meal_time: addingFood.meal_time,\r\n        date: selectedDate,\r\n      };\r\n\r\n      const response = await fetch(\"/api/food-journal-new\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          action: \"confirm\",\r\n          entries: [newEntry],\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        // Refresh entries\r\n        const entriesResponse = await fetch(\r\n          `/api/food-journal?date=${selectedDate}`\r\n        );\r\n        const entriesData = await entriesResponse.json();\r\n        if (entriesData.success) {\r\n          setEntries(entriesData.entries || []);\r\n        }\r\n\r\n        // Reset form\r\n        setAddingFood({\r\n          food_name: \"\",\r\n          meal_time: \"dimineata\",\r\n          useAI: true,\r\n          calories: 0,\r\n          protein: 0,\r\n          carbs: 0,\r\n          fat: 0,\r\n        });\r\n        setShowAddModal(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding food entry:\", error);\r\n    }\r\n  };\r\n\r\n  const mealTimeLabels = {\r\n    dimineata: \"🌅 Dimineața\",\r\n    amiaza: \"☀️ La amiază\",\r\n    seara: \"🌙 Seara\",\r\n  };\r\n\r\n  const groupedEntries = entries.reduce((groups, entry) => {\r\n    const mealTime = entry.meal_time;\r\n    if (!groups[mealTime]) {\r\n      groups[mealTime] = [];\r\n    }\r\n    groups[mealTime].push(entry);\r\n    return groups;\r\n  }, {} as Record<string, FoodEntry[]>);\r\n\r\n  const totalCalories = entries.reduce((sum, entry) => sum + entry.calories, 0);\r\n  const totalProtein = entries.reduce((sum, entry) => sum + entry.protein, 0);\r\n  const totalCarbs = entries.reduce((sum, entry) => sum + entry.carbs, 0);\r\n  const totalFat = entries.reduce((sum, entry) => sum + entry.fat, 0);\r\n\r\n  const targetCalories = userProfile?.daily_calorie_goal || 2000;\r\n  const calorieProgress = (totalCalories / targetCalories) * 100;\r\n\r\n  const formatDate = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    const today = new Date();\r\n    const yesterday = new Date(today);\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n    if (dateString === today.toISOString().split(\"T\")[0]) {\r\n      return \"Astăzi\";\r\n    } else if (dateString === yesterday.toISOString().split(\"T\")[0]) {\r\n      return \"Ieri\";\r\n    } else {\r\n      return date.toLocaleDateString(\"ro-RO\", {\r\n        weekday: \"long\",\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Header și controale */}\r\n      <div className=\"bg-white/90 backdrop-blur-sm rounded-2xl shadow-xl border border-gray-200/50 p-8\">\r\n        <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center gap-6\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"bg-gradient-to-r from-green-600 to-blue-600 p-3 rounded-xl\">\r\n              <span className=\"text-white text-2xl\">📊</span>\r\n            </div>\r\n            <div>\r\n              <h2 className=\"text-3xl font-bold bg-gradient-to-r from-green-600 to-blue-600 bg-clip-text text-transparent\">\r\n                Jurnalul alimentar\r\n              </h2>\r\n              <p className=\"text-gray-600 mt-1\">\r\n                Monitorizează-ți progresul zilnic pentru o viață mai sănătoasă\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex flex-col sm:flex-row items-start sm:items-center gap-4\">\r\n            <button\r\n              onClick={() => setShowAddModal(true)}\r\n              className=\"bg-gradient-to-r from-green-600 to-blue-600 text-white px-6 py-3 rounded-xl hover:from-green-700 hover:to-blue-700 transition-all duration-200 shadow-lg hover:shadow-xl flex items-center gap-3 font-medium\"\r\n            >\r\n              <span className=\"text-lg\">➕</span>\r\n              <span>Adaugă aliment</span>\r\n            </button>\r\n\r\n            <div className=\"flex items-center space-x-3 bg-gray-50 rounded-xl p-2\">\r\n              <label className=\"text-sm font-medium text-gray-700 pl-2\">\r\n                📅 Selectează data:\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                value={selectedDate}\r\n                onChange={(e) => setSelectedDate(e.target.value)}\r\n                max={new Date().toISOString().split(\"T\")[0]}\r\n                className=\"px-3 py-2 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white shadow-sm\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Progres calorii și macronutrienți */}\r\n      <div className=\"bg-white/90 backdrop-blur-sm rounded-2xl shadow-xl border border-gray-200/50 p-8\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h3 className=\"text-2xl font-bold text-gray-800 flex items-center gap-3\">\r\n            <span className=\"text-2xl\">🎯</span>\r\n            Progresul pentru {formatDate(selectedDate)}\r\n          </h3>\r\n          <div className=\"text-sm font-medium text-gray-600 bg-gray-100 px-4 py-2 rounded-full\">\r\n            🏆 Obiectiv: {targetCalories} kcal/zi\r\n          </div>\r\n        </div>\r\n\r\n        {/* Cards pentru macronutrienți */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n          <div className=\"bg-gradient-to-br from-blue-50 to-blue-100 rounded-xl p-6 border border-blue-200\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <span className=\"text-2xl\">🔥</span>\r\n              <span className=\"text-xs font-medium text-blue-600 bg-blue-200 px-2 py-1 rounded-full\">\r\n                {Math.round(calorieProgress)}%\r\n              </span>\r\n            </div>\r\n            <div className=\"text-3xl font-bold text-blue-700 mb-1\">\r\n              {Math.round(totalCalories)}\r\n            </div>\r\n            <div className=\"text-sm font-medium text-blue-600 mb-2\">\r\n              kcal consumate\r\n            </div>\r\n            <div className=\"w-full bg-blue-200 rounded-full h-2\">\r\n              <div\r\n                className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n                style={{ width: `${Math.min(calorieProgress, 100)}%` }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-gradient-to-br from-red-50 to-red-100 rounded-xl p-6 border border-red-200\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <span className=\"text-2xl\">🥩</span>\r\n            </div>\r\n            <div className=\"text-3xl font-bold text-red-700 mb-1\">\r\n              {Math.round(totalProtein * 10) / 10}g\r\n            </div>\r\n            <div className=\"text-sm font-medium text-red-600\">Proteine</div>\r\n          </div>\r\n\r\n          <div className=\"bg-gradient-to-br from-yellow-50 to-yellow-100 rounded-xl p-6 border border-yellow-200\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <span className=\"text-2xl\">🍞</span>\r\n            </div>\r\n            <div className=\"text-3xl font-bold text-yellow-700 mb-1\">\r\n              {Math.round(totalCarbs * 10) / 10}g\r\n            </div>\r\n            <div className=\"text-sm font-medium text-yellow-600\">\r\n              Carbohidrați\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-gradient-to-br from-green-50 to-green-100 rounded-xl p-6 border border-green-200\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <span className=\"text-2xl\">🥑</span>\r\n            </div>\r\n            <div className=\"text-3xl font-bold text-green-700 mb-1\">\r\n              {Math.round(totalFat * 10) / 10}g\r\n            </div>\r\n            <div className=\"text-sm font-medium text-green-600\">Grăsimi</div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Bara de progres globală */}\r\n        <div className=\"bg-gray-50 rounded-xl p-6\">\r\n          <div className=\"flex justify-between items-center mb-3\">\r\n            <span className=\"font-medium text-gray-700\">Progres zilnic</span>\r\n            <span className=\"text-sm font-medium text-gray-600\">\r\n              {targetCalories > totalCalories\r\n                ? `${Math.round(targetCalories - totalCalories)} kcal rămase`\r\n                : `${Math.round(\r\n                    totalCalories - targetCalories\r\n                  )} kcal peste obiectiv`}\r\n            </span>\r\n          </div>\r\n          <div className=\"w-full bg-gray-200 rounded-full h-4 overflow-hidden\">\r\n            <div\r\n              className={`h-4 rounded-full transition-all duration-500 ${\r\n                calorieProgress > 110\r\n                  ? \"bg-gradient-to-r from-red-500 to-red-600\"\r\n                  : calorieProgress > 90\r\n                  ? \"bg-gradient-to-r from-orange-500 to-orange-600\"\r\n                  : \"bg-gradient-to-r from-blue-500 to-green-500\"\r\n              }`}\r\n              style={{ width: `${Math.min(calorieProgress, 120)}%` }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Intrările pe mese */}\r\n      {loading ? (\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-6 text-center\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto mb-2\"></div>\r\n          <p className=\"text-gray-600\">Se încarcă intrările...</p>\r\n        </div>\r\n      ) : entries.length === 0 ? (\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-6 text-center\">\r\n          <div className=\"text-6xl mb-4\">🍽️</div>\r\n          <h3 className=\"text-lg font-medium text-gray-800 mb-2\">\r\n            Nicio intrare pentru {formatDate(selectedDate)}\r\n          </h3>\r\n          <p className=\"text-gray-600 mb-4\">\r\n            Începe să îți înregistrezi mesele folosind chat-ul cu Alex!\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"space-y-6\">\r\n          {([\"dimineata\", \"amiaza\", \"seara\"] as const).map((mealTime) => {\r\n            const mealEntries = groupedEntries[mealTime] || [];\r\n            const mealCalories = mealEntries.reduce(\r\n              (sum, entry) => sum + entry.calories,\r\n              0\r\n            );\r\n\r\n            return (\r\n              <div\r\n                key={mealTime}\r\n                className=\"bg-white rounded-lg shadow-sm border\"\r\n              >\r\n                <div className=\"p-4 border-b bg-gray-50\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <h3 className=\"font-medium text-gray-800\">\r\n                      {mealTimeLabels[mealTime]}\r\n                    </h3>\r\n                    <div className=\"text-sm text-gray-600\">\r\n                      {Math.round(mealCalories)} kcal\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {mealEntries.length === 0 ? (\r\n                  <div className=\"p-6 text-center text-gray-500\">\r\n                    Nicio intrare pentru această masă\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"p-4 space-y-3\">\r\n                    {mealEntries.map((entry) => (\r\n                      <div\r\n                        key={entry.id}\r\n                        className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\"\r\n                      >\r\n                        <div className=\"flex-1\">\r\n                          <h4 className=\"font-medium text-gray-800\">\r\n                            {entry.food_name}\r\n                          </h4>\r\n                          <div className=\"flex space-x-4 text-sm text-gray-600 mt-1\">\r\n                            <span>{Math.round(entry.calories)} kcal</span>\r\n                            <span>\r\n                              P: {Math.round(entry.protein * 10) / 10}g\r\n                            </span>\r\n                            <span>C: {Math.round(entry.carbs * 10) / 10}g</span>\r\n                            <span>G: {Math.round(entry.fat * 10) / 10}g</span>\r\n                          </div>\r\n                        </div>\r\n                        <button\r\n                          onClick={() => deleteEntry(entry.id)}\r\n                          className=\"ml-4 p-2 text-red-600 hover:bg-red-50 rounded-full transition-colors\"\r\n                          title=\"Șterge intrarea\"\r\n                        >\r\n                          🗑️\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal pentru adăugarea de alimente */}\r\n      {showAddModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md mx-4\">\r\n            <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">\r\n              Adaugă aliment nou\r\n            </h3>\r\n\r\n            <div className=\"space-y-4\">\r\n              {/* Nume aliment */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Numele alimentului\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={addingFood.food_name}\r\n                  onChange={(e) =>\r\n                    setAddingFood({ ...addingFood, food_name: e.target.value })\r\n                  }\r\n                  placeholder=\"ex: 2 ouă mici, 100g piept de pui\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n\r\n              {/* Timpul mesei */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Timpul mesei\r\n                </label>\r\n                <select\r\n                  value={addingFood.meal_time}\r\n                  onChange={(e) =>\r\n                    setAddingFood({\r\n                      ...addingFood,\r\n                      meal_time: e.target.value as\r\n                        | \"dimineata\"\r\n                        | \"amiaza\"\r\n                        | \"seara\",\r\n                    })\r\n                  }\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                >\r\n                  <option value=\"dimineata\">🌅 Dimineața</option>\r\n                  <option value=\"amiaza\">☀️ La amiază</option>\r\n                  <option value=\"seara\">🌙 Seara</option>\r\n                </select>\r\n              </div>\r\n\r\n              {/* Toggle pentru AI vs Manual */}\r\n              <div className=\"flex items-center space-x-3\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"useAI\"\r\n                  checked={addingFood.useAI}\r\n                  onChange={(e) =>\r\n                    setAddingFood({ ...addingFood, useAI: e.target.checked })\r\n                  }\r\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                />\r\n                <label htmlFor=\"useAI\" className=\"text-sm text-gray-700\">\r\n                  Estimează valorile nutriționale cu AI\r\n                </label>\r\n              </div>\r\n\r\n              {/* Valori manuale (dacă AI este dezactivat) */}\r\n              {!addingFood.useAI && (\r\n                <div className=\"grid grid-cols-2 gap-3\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Calorii\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={addingFood.calories}\r\n                      onChange={(e) =>\r\n                        setAddingFood({\r\n                          ...addingFood,\r\n                          calories: parseInt(e.target.value) || 0,\r\n                        })\r\n                      }\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Proteine (g)\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.1\"\r\n                      value={addingFood.protein}\r\n                      onChange={(e) =>\r\n                        setAddingFood({\r\n                          ...addingFood,\r\n                          protein: parseFloat(e.target.value) || 0,\r\n                        })\r\n                      }\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Carbohidrați (g)\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.1\"\r\n                      value={addingFood.carbs}\r\n                      onChange={(e) =>\r\n                        setAddingFood({\r\n                          ...addingFood,\r\n                          carbs: parseFloat(e.target.value) || 0,\r\n                        })\r\n                      }\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Grăsimi (g)\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.1\"\r\n                      value={addingFood.fat}\r\n                      onChange={(e) =>\r\n                        setAddingFood({\r\n                          ...addingFood,\r\n                          fat: parseFloat(e.target.value) || 0,\r\n                        })\r\n                      }\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Butoane */}\r\n            <div className=\"flex justify-end space-x-3 mt-6\">\r\n              <button\r\n                onClick={() => {\r\n                  setShowAddModal(false);\r\n                  setAddingFood({\r\n                    food_name: \"\",\r\n                    meal_time: \"dimineata\",\r\n                    useAI: true,\r\n                    calories: 0,\r\n                    protein: 0,\r\n                    carbs: 0,\r\n                    fat: 0,\r\n                  });\r\n                }}\r\n                className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\r\n              >\r\n                Anulează\r\n              </button>\r\n              <button\r\n                onClick={addFoodEntry}\r\n                disabled={!addingFood.food_name.trim()}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                Adaugă\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3241, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alexx/OneDrive/Desktop/cals/src/components/RecipeGenerator.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\n\r\ninterface UserProfile {\r\n  full_name?: string;\r\n  age?: number;\r\n  weight?: number;\r\n  height?: number;\r\n  gender?: \"male\" | \"female\";\r\n  activity_level?:\r\n    | \"sedentary\"\r\n    | \"light\"\r\n    | \"moderate\"\r\n    | \"active\"\r\n    | \"very_active\";\r\n  goal?: \"lose\" | \"maintain\" | \"gain\";\r\n  daily_calorie_goal?: number;\r\n}\r\n\r\ninterface Recipe {\r\n  name: string;\r\n  description: string;\r\n  prep_time: number;\r\n  cook_time: number;\r\n  servings: number;\r\n  calories_per_serving: number;\r\n  protein_per_serving: number;\r\n  carbs_per_serving: number;\r\n  fat_per_serving: number;\r\n  ingredients: string[];\r\n  instructions: string[];\r\n  tags: string[];\r\n}\r\n\r\ninterface RecipeGeneratorProps {\r\n  userProfile?: UserProfile;\r\n}\r\n\r\nexport default function RecipeGenerator({ userProfile }: RecipeGeneratorProps) {\r\n  const [preferences, setPreferences] = useState(\"\");\r\n  const [mealType, setMealType] = useState(\"orice\");\r\n  const [timeLimit, setTimeLimit] = useState(\"\");\r\n  const [ingredients, setIngredients] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [recipe, setRecipe] = useState<Recipe | null>(null);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const generateRecipe = async () => {\r\n    if (!preferences.trim()) {\r\n      setError(\"Te rog să descrii ce fel de rețetă vrei\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setRecipe(null);\r\n\r\n    try {\r\n      const response = await fetch(\"/api/recipe-generator\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          preferences: preferences.trim(),\r\n          meal_type: mealType,\r\n          time_limit: timeLimit ? parseInt(timeLimit) : null,\r\n          available_ingredients: ingredients.trim(),\r\n          user_profile: userProfile,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        setRecipe(data.recipe);\r\n      } else {\r\n        setError(data.error || \"Nu am putut genera rețeta\");\r\n      }\r\n    } catch {\r\n      setError(\"A apărut o eroare. Te rog să încerci din nou.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const mealTypes = [\r\n    { value: \"orice\", label: \"Orice fel de masă\" },\r\n    { value: \"mic_dejun\", label: \"Mic dejun\" },\r\n    { value: \"pranz\", label: \"Prânz\" },\r\n    { value: \"cina\", label: \"Cină\" },\r\n    { value: \"gustare\", label: \"Gustare\" },\r\n  ];\r\n\r\n  const examplePrompts = [\r\n    \"O salată sănătoasă cu pui și avocado\",\r\n    \"Ceva rapid pentru mic dejun cu ouă\",\r\n    \"O supă caldă și hrănitoare pentru seara\",\r\n    \"Un smoothie proteic pentru după antrenament\",\r\n    \"O masă vegetariană bogată în proteine\",\r\n  ];\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">\r\n          Generator de rețete\r\n        </h2>\r\n        <p className=\"text-gray-600\">\r\n          Descrie ce vrei să gătești și îți voi genera o rețetă personalizată\r\n        </p>\r\n      </div>\r\n\r\n      {/* Form */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Ce ai vrea să gătești? *\r\n            </label>\r\n            <textarea\r\n              value={preferences}\r\n              onChange={(e) => setPreferences(e.target.value)}\r\n              placeholder=\"De exemplu: ceva sănătos cu pui, o supă de legume, un desert fără zahăr...\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none\"\r\n              rows={3}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Tipul mesei\r\n              </label>\r\n              <select\r\n                value={mealType}\r\n                onChange={(e) => setMealType(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                {mealTypes.map((type) => (\r\n                  <option key={type.value} value={type.value}>\r\n                    {type.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Timp maxim (minute)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={timeLimit}\r\n                onChange={(e) => setTimeLimit(e.target.value)}\r\n                placeholder=\"ex: 30\"\r\n                min=\"5\"\r\n                max=\"240\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Ingrediente disponibile (opțional)\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={ingredients}\r\n              onChange={(e) => setIngredients(e.target.value)}\r\n              placeholder=\"ex: pui, broccoli, orez, roșii...\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"bg-red-50 border border-red-200 rounded-md p-3\">\r\n              <p className=\"text-sm text-red-600\">{error}</p>\r\n            </div>\r\n          )}\r\n\r\n          <button\r\n            onClick={generateRecipe}\r\n            disabled={loading || !preferences.trim()}\r\n            className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {loading ? (\r\n              <div className=\"flex items-center justify-center\">\r\n                <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\r\n                Generez rețeta...\r\n              </div>\r\n            ) : (\r\n              \"👨‍🍳 Generează rețeta\"\r\n            )}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Example prompts */}\r\n        {!recipe && (\r\n          <div className=\"mt-6 pt-6 border-t\">\r\n            <p className=\"text-sm text-gray-600 mb-3\">Idei de rețete:</p>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {examplePrompts.map((prompt, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => setPreferences(prompt)}\r\n                  className=\"text-xs bg-gray-100 border border-gray-200 rounded-full px-3 py-2 hover:bg-gray-200 transition-colors\"\r\n                >\r\n                  {prompt}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Recipe Result */}\r\n      {recipe && (\r\n        <div className=\"bg-white rounded-lg shadow-sm border overflow-hidden\">\r\n          {/* Recipe Header */}\r\n          <div className=\"bg-gradient-to-r from-blue-500 to-purple-600 text-white p-6\">\r\n            <h3 className=\"text-2xl font-bold mb-2\">{recipe.name}</h3>\r\n            <p className=\"text-blue-100\">{recipe.description}</p>\r\n\r\n            <div className=\"flex flex-wrap gap-4 mt-4 text-sm\">\r\n              <div className=\"flex items-center\">\r\n                <span className=\"mr-1\">⏱️</span>\r\n                <span>Prep: {recipe.prep_time} min</span>\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <span className=\"mr-1\">🔥</span>\r\n                <span>Gătire: {recipe.cook_time} min</span>\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <span className=\"mr-1\">👥</span>\r\n                <span>{recipe.servings} porții</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Nutrition Info */}\r\n          <div className=\"p-6 bg-gray-50 border-b\">\r\n            <h4 className=\"font-medium text-gray-800 mb-3\">\r\n              Informații nutriționale (per porție):\r\n            </h4>\r\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\r\n              <div>\r\n                <div className=\"text-2xl font-bold text-blue-600\">\r\n                  {Math.round(recipe.calories_per_serving)}\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">kcal</div>\r\n              </div>\r\n              <div>\r\n                <div className=\"text-xl font-bold text-red-600\">\r\n                  {Math.round(recipe.protein_per_serving * 10) / 10}g\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">Proteine</div>\r\n              </div>\r\n              <div>\r\n                <div className=\"text-xl font-bold text-yellow-600\">\r\n                  {Math.round(recipe.carbs_per_serving * 10) / 10}g\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">Carbohidrați</div>\r\n              </div>\r\n              <div>\r\n                <div className=\"text-xl font-bold text-green-600\">\r\n                  {Math.round(recipe.fat_per_serving * 10) / 10}g\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">Grăsimi</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"p-6\">\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n              {/* Ingredients */}\r\n              <div>\r\n                <h4 className=\"font-medium text-gray-800 mb-4 flex items-center\">\r\n                  <span className=\"mr-2\">🛒</span>\r\n                  Ingrediente:\r\n                </h4>\r\n                <ul className=\"space-y-2\">\r\n                  {recipe.ingredients.map((ingredient, index) => (\r\n                    <li key={index} className=\"flex items-start\">\r\n                      <span className=\"text-blue-500 mr-2\">•</span>\r\n                      <span className=\"text-gray-700\">{ingredient}</span>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n\r\n              {/* Instructions */}\r\n              <div>\r\n                <h4 className=\"font-medium text-gray-800 mb-4 flex items-center\">\r\n                  <span className=\"mr-2\">📝</span>\r\n                  Instrucțiuni:\r\n                </h4>\r\n                <ol className=\"space-y-3\">\r\n                  {recipe.instructions.map((instruction, index) => (\r\n                    <li key={index} className=\"flex items-start\">\r\n                      <span className=\"bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm font-medium mr-3 mt-0.5 flex-shrink-0\">\r\n                        {index + 1}\r\n                      </span>\r\n                      <span className=\"text-gray-700\">{instruction}</span>\r\n                    </li>\r\n                  ))}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Tags */}\r\n            {recipe.tags && recipe.tags.length > 0 && (\r\n              <div className=\"mt-8 pt-6 border-t\">\r\n                <h4 className=\"font-medium text-gray-800 mb-3\">Tags:</h4>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {recipe.tags.map((tag, index) => (\r\n                    <span\r\n                      key={index}\r\n                      className=\"bg-blue-100 text-blue-800 text-sm px-3 py-1 rounded-full\"\r\n                    >\r\n                      {tag}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Action buttons */}\r\n            <div className=\"mt-8 pt-6 border-t flex gap-3\">\r\n              <button\r\n                onClick={() => setRecipe(null)}\r\n                className=\"flex-1 bg-gray-200 text-gray-800 py-2 px-4 rounded-md hover:bg-gray-300 transition-colors\"\r\n              >\r\n                Generează altă rețetă\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  const text = `${recipe.name}\\n\\n${\r\n                    recipe.description\r\n                  }\\n\\nIngrediente:\\n${recipe.ingredients.join(\r\n                    \"\\n\"\r\n                  )}\\n\\nInstrucțiuni:\\n${recipe.instructions\r\n                    .map((inst, i) => `${i + 1}. ${inst}`)\r\n                    .join(\"\\n\")}`;\r\n                  navigator.clipboard.writeText(text);\r\n                  alert(\"Rețeta a fost copiată în clipboard!\");\r\n                }}\r\n                className=\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors\"\r\n              >\r\n                📋 Copiază rețeta\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4042, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alexx/OneDrive/Desktop/cals/src/components/ConfirmationPopup.tsx"],"sourcesContent":["\"use client\";\r\n\r\ninterface PendingEntry {\r\n  food_name: string;\r\n  calories: number;\r\n  protein: number;\r\n  carbs: number;\r\n  fat: number;\r\n  meal_time: \"dimineata\" | \"amiaza\" | \"seara\";\r\n  date: string;\r\n}\r\n\r\ninterface ConfirmationPopupProps {\r\n  entries: PendingEntry[];\r\n  onConfirm: () => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nexport default function ConfirmationPopup({\r\n  entries,\r\n  onConfirm,\r\n  onCancel,\r\n}: ConfirmationPopupProps) {\r\n  const mealTimeLabels = {\r\n    dimineata: \"🌅 Dimineața\",\r\n    amiaza: \"☀️ La amiază\",\r\n    seara: \"🌙 Seara\",\r\n  };\r\n\r\n  const totalCalories = entries.reduce((sum, entry) => sum + entry.calories, 0);\r\n  const totalProtein = entries.reduce((sum, entry) => sum + entry.protein, 0);\r\n  const totalCarbs = entries.reduce((sum, entry) => sum + entry.carbs, 0);\r\n  const totalFat = entries.reduce((sum, entry) => sum + entry.fat, 0);\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\r\n        {/* Header */}\r\n        <div className=\"p-6 border-b\">\r\n          <h2 className=\"text-xl font-bold text-gray-800 mb-2\">\r\n            Confirmă intrările în jurnal\r\n          </h2>\r\n          <p className=\"text-gray-600\">\r\n            Am detectat {entries.length} element{entries.length > 1 ? \"e\" : \"\"}{\" \"}\r\n            de mâncare. Verifică și confirmă pentru a le adăuga în jurnalul tău.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Entries List */}\r\n        <div className=\"p-6 space-y-4\">\r\n          {entries.map((entry, index) => (\r\n            <div key={index} className=\"bg-gray-50 rounded-lg p-4\">\r\n              <div className=\"flex justify-between items-start mb-3\">\r\n                <div>\r\n                  <h3 className=\"font-medium text-gray-800 text-lg\">\r\n                    {entry.food_name}\r\n                  </h3>\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    {mealTimeLabels[entry.meal_time]} •{\" \"}\r\n                    {new Date(entry.date).toLocaleDateString(\"ro-RO\")}\r\n                  </p>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <div className=\"text-lg font-bold text-blue-600\">\r\n                    {Math.round(entry.calories)} kcal\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-gray-600\">Proteine</div>\r\n                  <div className=\"font-medium text-red-600\">\r\n                    {Math.round(entry.protein * 10) / 10}g\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-gray-600\">Carbohidrați</div>\r\n                  <div className=\"font-medium text-yellow-600\">\r\n                    {Math.round(entry.carbs * 10) / 10}g\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-gray-600\">Grăsimi</div>\r\n                  <div className=\"font-medium text-green-600\">\r\n                    {Math.round(entry.fat * 10) / 10}g\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Summary */}\r\n        {entries.length > 1 && (\r\n          <div className=\"px-6 pb-4\">\r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n              <h4 className=\"font-medium text-blue-800 mb-3\">\r\n                Total pentru această sesiune:\r\n              </h4>\r\n              <div className=\"grid grid-cols-4 gap-4 text-center\">\r\n                <div>\r\n                  <div className=\"text-2xl font-bold text-blue-600\">\r\n                    {Math.round(totalCalories)}\r\n                  </div>\r\n                  <div className=\"text-sm text-blue-600\">kcal</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-xl font-bold text-red-600\">\r\n                    {Math.round(totalProtein * 10) / 10}g\r\n                  </div>\r\n                  <div className=\"text-sm text-red-600\">Proteine</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-xl font-bold text-yellow-600\">\r\n                    {Math.round(totalCarbs * 10) / 10}g\r\n                  </div>\r\n                  <div className=\"text-sm text-yellow-600\">Carbohidrați</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-xl font-bold text-green-600\">\r\n                    {Math.round(totalFat * 10) / 10}g\r\n                  </div>\r\n                  <div className=\"text-sm text-green-600\">Grăsimi</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Actions */}\r\n        <div className=\"p-6 border-t bg-gray-50 flex space-x-3\">\r\n          <button\r\n            onClick={onCancel}\r\n            className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-500\"\r\n          >\r\n            Anulează\r\n          </button>\r\n          <button\r\n            onClick={onConfirm}\r\n            className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            ✅ Confirmă și adaugă în jurnal\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAkBe,SAAS,kBAAkB,KAIjB;QAJiB,EACxC,OAAO,EACP,SAAS,EACT,QAAQ,EACe,GAJiB;IAKxC,MAAM,iBAAiB;QACrB,WAAW;QACX,QAAQ;QACR,OAAO;IACT;IAEA,MAAM,gBAAgB,QAAQ,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,MAAM,QAAQ,EAAE;IAC3E,MAAM,eAAe,QAAQ,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,MAAM,OAAO,EAAE;IACzE,MAAM,aAAa,QAAQ,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,MAAM,KAAK,EAAE;IACrE,MAAM,WAAW,QAAQ,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,MAAM,GAAG,EAAE;IAEjE,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAuC;;;;;;sCAGrD,6LAAC;4BAAE,WAAU;;gCAAgB;gCACd,QAAQ,MAAM;gCAAC;gCAAS,QAAQ,MAAM,GAAG,IAAI,MAAM;gCAAI;gCAAI;;;;;;;;;;;;;8BAM5E,6LAAC;oBAAI,WAAU;8BACZ,QAAQ,GAAG,CAAC,CAAC,OAAO,sBACnB,6LAAC;4BAAgB,WAAU;;8CACzB,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;;8DACC,6LAAC;oDAAG,WAAU;8DACX,MAAM,SAAS;;;;;;8DAElB,6LAAC;oDAAE,WAAU;;wDACV,cAAc,CAAC,MAAM,SAAS,CAAC;wDAAC;wDAAG;wDACnC,IAAI,KAAK,MAAM,IAAI,EAAE,kBAAkB,CAAC;;;;;;;;;;;;;sDAG7C,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAI,WAAU;;oDACZ,KAAK,KAAK,CAAC,MAAM,QAAQ;oDAAE;;;;;;;;;;;;;;;;;;8CAKlC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;8DAAgB;;;;;;8DAC/B,6LAAC;oDAAI,WAAU;;wDACZ,KAAK,KAAK,CAAC,MAAM,OAAO,GAAG,MAAM;wDAAG;;;;;;;;;;;;;sDAGzC,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;8DAAgB;;;;;;8DAC/B,6LAAC;oDAAI,WAAU;;wDACZ,KAAK,KAAK,CAAC,MAAM,KAAK,GAAG,MAAM;wDAAG;;;;;;;;;;;;;sDAGvC,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;8DAAgB;;;;;;8DAC/B,6LAAC;oDAAI,WAAU;;wDACZ,KAAK,KAAK,CAAC,MAAM,GAAG,GAAG,MAAM;wDAAG;;;;;;;;;;;;;;;;;;;;2BAlC/B;;;;;;;;;;gBA2Cb,QAAQ,MAAM,GAAG,mBAChB,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAAiC;;;;;;0CAG/C,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;;0DACC,6LAAC;gDAAI,WAAU;0DACZ,KAAK,KAAK,CAAC;;;;;;0DAEd,6LAAC;gDAAI,WAAU;0DAAwB;;;;;;;;;;;;kDAEzC,6LAAC;;0DACC,6LAAC;gDAAI,WAAU;;oDACZ,KAAK,KAAK,CAAC,eAAe,MAAM;oDAAG;;;;;;;0DAEtC,6LAAC;gDAAI,WAAU;0DAAuB;;;;;;;;;;;;kDAExC,6LAAC;;0DACC,6LAAC;gDAAI,WAAU;;oDACZ,KAAK,KAAK,CAAC,aAAa,MAAM;oDAAG;;;;;;;0DAEpC,6LAAC;gDAAI,WAAU;0DAA0B;;;;;;;;;;;;kDAE3C,6LAAC;;0DACC,6LAAC;gDAAI,WAAU;;oDACZ,KAAK,KAAK,CAAC,WAAW,MAAM;oDAAG;;;;;;;0DAElC,6LAAC;gDAAI,WAAU;0DAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAQlD,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAGD,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;KAlIwB","debugId":null}}]
}